{
  "_args": [
    [
      {
        "raw": "@google-cloud/vision@https://registry.npmjs.org/@google-cloud/vision/-/vision-0.9.0.tgz",
        "scope": "@google-cloud",
        "escapedName": "@google-cloud%2fvision",
        "name": "@google-cloud/vision",
        "rawSpec": "https://registry.npmjs.org/@google-cloud/vision/-/vision-0.9.0.tgz",
        "spec": "https://registry.npmjs.org/@google-cloud/vision/-/vision-0.9.0.tgz",
        "type": "remote"
      },
      "/Users/n0r007o/Documents/cloud-api/file-store/node_modules/google-cloud"
    ]
  ],
  "_from": "@google-cloud/vision@>=0.9.0 <0.10.0",
  "_id": "@google-cloud/vision@0.9.0",
  "_inCache": true,
  "_location": "/google-cloud/@google-cloud/vision",
  "_phantomChildren": {
    "extend": "3.0.0",
    "google-auto-auth": "0.5.2",
    "grpc": "1.1.2",
    "lodash": "4.17.4",
    "process-nextick-args": "1.0.7",
    "readable-stream": "2.2.3"
  },
  "_requested": {
    "raw": "@google-cloud/vision@https://registry.npmjs.org/@google-cloud/vision/-/vision-0.9.0.tgz",
    "scope": "@google-cloud",
    "escapedName": "@google-cloud%2fvision",
    "name": "@google-cloud/vision",
    "rawSpec": "https://registry.npmjs.org/@google-cloud/vision/-/vision-0.9.0.tgz",
    "spec": "https://registry.npmjs.org/@google-cloud/vision/-/vision-0.9.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/google-cloud"
  ],
  "_resolved": "https://registry.npmjs.org/@google-cloud/vision/-/vision-0.9.0.tgz",
  "_shasum": "cc0159af9477cee31c3c26f1a3d4e8a8fdda8292",
  "_shrinkwrap": null,
  "_spec": "@google-cloud/vision@https://registry.npmjs.org/@google-cloud/vision/-/vision-0.9.0.tgz",
  "_where": "/Users/n0r007o/Documents/cloud-api/file-store/node_modules/google-cloud",
  "author": {
    "name": "Google Inc."
  },
  "bugs": {
    "url": "https://github.com/googlecloudplatform/google-cloud-node/issues"
  },
  "contributors": [
    {
      "name": "Burcu Dogan",
      "email": "jbd@google.com"
    },
    {
      "name": "Johan Euphrosine",
      "email": "proppy@google.com"
    },
    {
      "name": "Patrick Costello",
      "email": "pcostell@google.com"
    },
    {
      "name": "Ryan Seys",
      "email": "ryan@ryanseys.com"
    },
    {
      "name": "Silvano Luciani",
      "email": "silvano@google.com"
    },
    {
      "name": "Stephen Sawchuk",
      "email": "sawchuk@gmail.com"
    }
  ],
  "dependencies": {
    "@google-cloud/common": "^0.12.0",
    "@google-cloud/common-grpc": "^0.1.1",
    "arrify": "^1.0.0",
    "async": "^2.0.1",
    "extend": "^3.0.0",
    "google-gax": "^0.12.1",
    "google-proto-files": "^0.10.0",
    "is": "^3.0.1",
    "prop-assign": "^1.0.0",
    "propprop": "^0.3.0",
    "rgb-hex": "^1.0.0",
    "string-format-obj": "^1.0.0"
  },
  "description": "Cloud Vision Client Library for Node.js",
  "devDependencies": {
    "@google-cloud/storage": "*",
    "deep-strict-equal": "^0.2.0",
    "mocha": "^3.0.1",
    "multiline": "^1.0.2",
    "node-uuid": "^1.4.7",
    "normalize-newline": "^2.0.0",
    "proxyquire": "^1.7.10",
    "tmp": "^0.0.31"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "files": [
    "src",
    "AUTHORS",
    "CONTRIBUTORS",
    "COPYING"
  ],
  "homepage": "https://github.com/googlecloudplatform/google-cloud-node#readme",
  "keywords": [
    "google apis client",
    "google api client",
    "google apis",
    "google api",
    "google",
    "google cloud platform",
    "google cloud",
    "cloud",
    "google vision",
    "vision"
  ],
  "license": "Apache-2.0",
  "main": "./src/index.js",
  "name": "@google-cloud/vision",
  "optionalDependencies": {},
  "readme": "# @google-cloud/vision ([Alpha][versioning])\r\n> Cloud Vision Client Library for Node.js\r\n\r\n*Looking for more Google APIs than just Vision? You might want to check out [`google-cloud`][google-cloud].*\r\n\r\n- [API Documentation][gcloud-vision-docs]\r\n- [Official Documentation][cloud-vision-docs]\r\n\r\n\r\n```sh\r\n$ npm install --save @google-cloud/vision\r\n```\r\n```js\r\nvar vision = require('@google-cloud/vision')({\r\n  projectId: 'grape-spaceship-123',\r\n  keyFilename: '/path/to/keyfile.json'\r\n});\r\n\r\n// Read the text from an image.\r\nvision.detectText('./image.jpg', function(err, text) {\r\n  // text = [\r\n  //   'This was text found in the image',\r\n  //   'This was more text found in the image'\r\n  // ]\r\n});\r\n\r\n// Detect faces and the locations of their features in an image.\r\nvision.detectFaces('./image.jpg', function(err, faces) {\r\n  // faces = [\r\n  //   {\r\n  //     angles: {pan,tilt,roll},\r\n  //     bounds: {\r\n  //       head: [{x,y},{x,y},{x,y},{x,y}],\r\n  //       face: [{x,y},{x,y},{x,y},{x,y}]\r\n  //     },\r\n  //     features: {\r\n  //       confidence: 34.489909,\r\n  //       chin: {\r\n  //         center: {x,y,z},\r\n  //         left: {x,y,z},\r\n  //         right: {x,y,z}\r\n  //       },\r\n  //       ears: {\r\n  //         left: {x,y,z},\r\n  //         right: {x,y,z}\r\n  //       },\r\n  //       eyebrows: {\r\n  //         left: {\r\n  //           left: {x,y,z},\r\n  //           right: {x,y,z},\r\n  //           top: {x,y,z}\r\n  //         },\r\n  //         right: {\r\n  //           left: {x,y,z},\r\n  //           right: {x,y,z},\r\n  //           top: {x,y,z}\r\n  //         }\r\n  //       },\r\n  //       eyes: {\r\n  //         left: {\r\n  //           bottom: {x,y,z},\r\n  //           center: {x,y,z},\r\n  //           left: {x,y,z},\r\n  //           pupil: {x,y,z},\r\n  //           right: {x,y,z},\r\n  //           top: {x,y,z}\r\n  //         },\r\n  //         right: {\r\n  //           bottom: {x,y,z},\r\n  //           center: {x,y,z},\r\n  //           left: {x,y,z},\r\n  //           pupil: {x,y,z},\r\n  //           right: {x,y,z},\r\n  //           top: {x,y,z}\r\n  //         }\r\n  //       },\r\n  //       forehead: {x,y,z},\r\n  //       lips: {\r\n  //         bottom: {x,y,z},\r\n  //         top: {x,y,z}\r\n  //       },\r\n  //       mouth: {\r\n  //         center: {x,y,z},\r\n  //         left: {x,y,z},\r\n  //         right: {x,y,z}\r\n  //       },\r\n  //       nose: {\r\n  //         bottom: {\r\n  //           center: {x,y,z},\r\n  //           left: {x,y,z},\r\n  //           right: {x,y,z}\r\n  //         },\r\n  //         tip: {x,y,z},\r\n  //         top: {x,y,z}\r\n  //       }\r\n  //     },\r\n  //     confidence: 56.748849,\r\n  //     blurry: false,\r\n  //     dark: false,\r\n  //     happy: false,\r\n  //     hat: false,\r\n  //     mad: false,\r\n  //     sad: false,\r\n  //     surprised: false\r\n  //   }\r\n  // ]\r\n});\r\n\r\n// Promises are also supported by omitting callbacks.\r\nvision.detectFaces('./image.jpg').then(function(data) {\r\n  var faces = data[0];\r\n});\r\n\r\n// It's also possible to integrate with third-party Promise libraries.\r\nvar vision = require('@google-cloud/vision')({\r\n  promise: require('bluebird')\r\n});\r\n```\r\n\r\n\r\n## Authentication\r\n\r\nIt's incredibly easy to get authenticated and start using Google's APIs. You can set your credentials on a global basis as well as on a per-API basis. See each individual API section below to see how you can auth on a per-API-basis. This is useful if you want to use different accounts for different Cloud services.\r\n\r\n### On Google Cloud Platform\r\n\r\nIf you are running this client on Google Cloud Platform, we handle authentication for you with no configuration. You just need to make sure that when you [set up the GCE instance][gce-how-to], you add the correct scopes for the APIs you want to access.\r\n\r\n``` js\r\nvar vision = require('@google-cloud/vision')();\r\n// ...you're good to go!\r\n```\r\n\r\n### Elsewhere\r\n\r\nIf you are not running this client on Google Cloud Platform, you need a Google Developers service account. To create a service account:\r\n\r\n1. Visit the [Google Developers Console][dev-console].\r\n2. Create a new project or click on an existing project.\r\n3. Navigate to  **APIs & auth** > **APIs section** and turn on the following APIs (you may need to enable billing in order to use these services):\r\n  * Google Cloud Vision API\r\n4. Navigate to **APIs & auth** >  **Credentials** and then:\r\n  * If you want to use a new service account, click on **Create new Client ID** and select **Service account**. After the account is created, you will be prompted to download the JSON key file that the library uses to authenticate your requests.\r\n  * If you want to generate a new key for an existing service account, click on **Generate new JSON key** and download the JSON key file.\r\n\r\n``` js\r\nvar projectId = process.env.GCLOUD_PROJECT; // E.g. 'grape-spaceship-123'\r\n\r\nvar vision = require('@google-cloud/vision')({\r\n  projectId: projectId,\r\n\r\n  // The path to your key file:\r\n  keyFilename: '/path/to/keyfile.json'\r\n\r\n  // Or the contents of the key file:\r\n  credentials: require('./path/to/keyfile.json')\r\n});\r\n\r\n// ...you're good to go!\r\n```\r\n\r\n\r\n[versioning]: https://github.com/GoogleCloudPlatform/google-cloud-node#versioning\r\n[google-cloud]: https://github.com/GoogleCloudPlatform/google-cloud-node/\r\n[gce-how-to]: https://cloud.google.com/compute/docs/authentication#using\r\n[dev-console]: https://console.developers.google.com/project\r\n[gcloud-vision-docs]: https://googlecloudplatform.github.io/google-cloud-node/#/docs/vision\r\n[cloud-vision-docs]: https://cloud.google.com/vision/docs\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/googlecloudplatform/google-cloud-node.git"
  },
  "scripts": {
    "publish-module": "node ../../scripts/publish.js vision",
    "system-test": "mocha system-test/*.js --no-timeouts --bail",
    "test": "mocha test/*.js"
  },
  "version": "0.9.0"
}
